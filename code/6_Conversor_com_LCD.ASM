;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                      MARÇO DE 2021                              *
;*                 BASEADO NO EXEMPLO DO LIVRO                     *
;*           Desbravando o PIC. David José de Souza                *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		
		;COLOQUE AQUI SUAS NOVAS VARIÁVEIS
		CONT
		TOTAL
		TOTAL2
		AUX
		AUX2
		MEDIA
		DECIMAL
		;NÃO ESQUEÇA COMENTÁRIOS ESCLARECEDORES

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

IMPRIME_0
	MOVLW	.0
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 

IMPRIME_1
	MOVLW	.1
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 

IMPRIME_2
	MOVLW	.2
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_3
	MOVLW	.3
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_4
	MOVLW	.4
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_5
	MOVLW	.5
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_6
	MOVLW	.6
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_7
	MOVLW	.7
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_8
	MOVLW	.8
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_9
	MOVLW	.9
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_VIRGULA
	;MOVLW	','
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
IMPRIME_V
	;MOVLW	'V'
	; AQUI MOVERIA PRO DISPLAY, COISA QUE NÃO SOUBE FAZER
	;MOVWF	XXX
	;RRF	XXX <- REPETE 8 VEZES
	CALL	DELAY200
	RETURN 
	
DELAY200
	; PREESCALER = 32, PORTANTO PASSAMOS 193 NO TMR0
	MOVLW	.193
	MOVWF	TMR0
	BCF	INTCON, T0IF
ESPERA
	BTFSS	INTCON, T0IF
	GOTO	ESPERA
	RETURN
	

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000100' ;GP2 = ENTRADA
	MOVWF	TRISIO		
	MOVLW	B'00000100' ; AN2 = ENTRADA ANALÓGICA
	MOVWF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'10000100'	; 
	MOVWF	OPTION_REG	; DEFINE O CLOCK INTERNO COM PRESCALER = 1:32
	MOVLW	B'10100000'
	MOVWF	INTCON
	CALL	0x03FF
	MOVLW	OSCCAL
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'01001001' ; CANAL 2 (AN2) 
	MOVWF	ADCON0
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN
	CLRF	TOTAL
	CLRF	TOTAL2
	CLRF	MEDIA
	CLRF	DECIMAL
	CLRF	AUX
	CLRF	AUX2

	; PRIMEIRAMENTE PRECISAMOS FAZER A CONVERSÃO DE 32 VALORES 
	MOVLW	.32
	MOVWF	CONT	; MOVE 32 PRO CONTADOR ESPERAR 32 CONVERSÕES A/D 

	MOVLW	0x20		; INICIA O PONTEIRO 
	MOVWF	FSR
	MOVLW	.10
	ADDWF	FSR		; PULA PRA POSIÇÃO INICIAL DO PONTEIRO 

RETORNO
	BSF	ADCON0, GO_DONE 	; INICIA A CONVERSÃO 
LOOP
	BTFSC	ADCON0, GO_DONE		
	GOTO 	LOOP
	; TERMINA A CONVERSÃO 
	MOVFW	ADRESH 
	MOVWF	INDF		; MOVE VALOR DA CONVERSÃO PRO INDF 
	
	INCF 	FSR ; ANDA PRA PROXIMA POSICAO
	DECFSZ	CONT
	GOTO	RETORNO	; RETORNA PARA CONVERSÃO DO PRÓXIMO VALOR 
	; TERMINA DE PREENCHER OS 32 VALORES DO PONTEIRO 

	; O PONTEIRO ESTÁ APONTANDO PRO SEU 32 VALOR 
	MOVFW	INDF 
	MOVWF	TOTAL	; JOGA O ÚLTIMO VALOR NO TOTAL 
	MOVLW	.32
	MOVWF	CONT	; RESETA O CONTADOR 
RETORNO2 
	DECF	FSR	;  DECREMENTA O FSR PRO PONTEIRO APONTAR PRA POSIÇÃO ABAIXO 
	MOVFW	INDF 
	ADDWF	TOTAL ; ACRESCENTA O VALOR NO TOTAL 
	BTFSC	STATUS, C ; VERIFICA SE O CARRY DO STATUS TA SETADO O QUÊ SIGNIFICA 
	INCF	TOTAL2    ; QUE O VALOR PASSOU DE 255, PORTANTO PRECISAMOS DE OUTRA 
		          ; VARIÁVEL PARA GUARDAR O VALOR 
	DECFSZ	CONT
	GOTO	RETORNO2
	; FINALIZA A SOMA DOS VALORES DO PONTEIRO 
	; DIVIDIR POR 32 = DIVIDIR POR 2, 5 VEZES
	RRF	TOTAL2
	RRF	TOTAL 
	RRF	TOTAL2
	RRF	TOTAL
	RRF	TOTAL2
	RRF	TOTAL 
	RRF	TOTAL2
	RRF	TOTAL 
	RRF	TOTAL2
	RRF	TOTAL 

	MOVFW	TOTAL 
	MOVWF	MEDIA 

	; APÓS 5 ROTAÇÕES, A VARIÁVEL TOTAL2 IRÁ ESTAR ARMZENANDO O BIT MAIS
	; SIGNIFICATIVO DA PARTE DECIMAL
	; É PRECISO ROTACIONAR MAIS ALGUMAS VEZES PARA QUE ELE SE ALINHE 
	RRF	TOTAL2 	; OBTEM O BIT MAIS SIGNIFICATIVO DA PARTE DECIMAL 
	RRF	TOTAL2	; VAI PASSANDO AS CASAS DECIMAIS 
	RRF	TOTAL2
	RRF	TOTAL2
	RRF	TOTAL2
	RRF	TOTAL2
	MOVFW	TOTAL2
	MOVWF	DECIMAL

	; JA TEMOS O VALOR DA MEDIA, PRECISAMOS TRANSFORMAR PRA TENSÃO EM VOLTS
	; 5V = 255;
	MOVLW	.255
	MOVWF	AUX2	; COMEÇA TESTANDO SE MEDIA = 255, QUE SERIA 5V
	; DEPOIS VAI ABAIXANDO DE 5 EM 5, QUE SERIA UM INTERVALO DE 0,1V,
	; NO DISPLAY SÓ IRÁ APARECER DE 0; 0,1;....; ATÉ ?; 4,9; 5; PORTANTO
	; ESSA LOGICA IRA COBRIR TODOS OS VALORES POSSÍVEIS DO DISPLAY
	CLRF	CONT
RETORNO3	
	MOVFW	AUX2
	SUBWF	MEDIA
	BTFSC	STATUS, C	; SE CARRY = 0 ENTÃO O RESULTADO DA SUBTRAÇÃO DEU NEGATIVO
	GOTO	RESULTADO_VOLT	; SE ENTRAR AQUI FOI ENCONTRADO O RESULTADO EM VOLT
	; SE O RESULTADO FOI NEGATIVO, PRECISO SUBTRAIR O AUXILIAR POR 5, PARA TESTAR SE A 
	; TENSÃO É 4,9, DEPOIS DIMINUI MAIS 5 PRA TESTAR SE É 4,8, E ASSIM VAI 
	MOVLW	.5
	SUBWF	AUX2
	INCF	CONT	; CONT SERÁ USADO PARA VER QUANTAS VEZES FOI SUBTRAÍDO O AUX
	; COM NO MÁXIMO 50 VEZES, POIS 50 X 5 = 250, SUBTRAIU 250 DO VALOR TOTAL 
	MOVLW	.50
	SUBWF	CONT
	BTFSC	STATUS, C
	GOTO	RETORNO3 	; CASO CONT AINDA NÃO TENHA CHEGADO A 50, RETORNA ATÉ 
	; ENCONTRAR UM VALOR QUE ENTRE NO RESULTADO_VOLT, OU CONT CHEGAR  A 50

RESULTADO_VOLT 
	; CHEGAMOS AQUI COM UM VALOR DE 0 A 10 NO CONT QUE NOS DARÁ O VALOR EM VOLTS
	; CONT = 0 = 5V
	; CONT = 1 = 4,9V
	; CONT = 2 = 4,8V
	; CONT = 3 = 4,7V 
	; CONT = 4 = 4,6V
	; ASSIM VAI? ATÉ CONT = 51 = 0V

	MOVLW	.51
	SUBWF	CONT ; TESTA SE SAÍDA = 0V 
	BTFSC	STATUS, C
	GOTO	PROXIMO ; RESULTADO DA SUBTRAÇÃO NÃO DEU NEGATIVO 
       ; ENTÃO VAI PRO PRÓXIMO TESTE
	GOTO	IMPRIME00 

PROXIMO
	MOVLW	.50
	SUBWF	CONT	; TESTA SE SAÍDA = 0,1V
	BTFSC	STATUS, C
	GOTO	PROXIMO2
	GOTO	IMPRIME01

PROXIMO2
	MOVLW	.49
	SUBWF	CONT	; TESTA SE SAÍDA = 0,2V
	BTFSC	STATUS, C
	GOTO	PROXIMO3
	GOTO	IMPRIME02

PROXIMO3
	MOVLW	.48
	SUBWF	CONT	; TESTA SE SAÍDA = 0,3V
	BTFSC	STATUS, C
	GOTO	PROXIMO4
	GOTO	IMPRIME03

PROXIMO4
	MOVLW	.47
	SUBWF	CONT	; TESTA SE SAÍDA = 0,4V
	BTFSC	STATUS, C
	GOTO	PROXIMO5
	GOTO	IMPRIME04

PROXIMO5
	MOVLW	.46
	SUBWF	CONT	; TESTA SE SAÍDA = 0,5V
	BTFSC	STATUS, C
	GOTO	PROXIMO6
	GOTO	IMPRIME05


PROXIMO6
	MOVLW	.45
	SUBWF	CONT	; TESTA SE SAÍDA = 0,6V
	BTFSC	STATUS, C
	GOTO	PROXIMO7
	GOTO	IMPRIME06

PROXIMO7
	MOVLW	.44
	SUBWF	CONT	; TESTA SE SAÍDA = 0,7V
	BTFSC	STATUS, C
	GOTO	PROXIMO8
	GOTO	IMPRIME07

PROXIMO8
	MOVLW	.43
	SUBWF	CONT	; TESTA SE SAÍDA = 0,8V
	BTFSC	STATUS, C
	GOTO	PROXIMO9
	GOTO	IMPRIME08

PROXIMO9
	MOVLW	.42
	SUBWF	CONT	; TESTA SE SAÍDA = 0,9V
	BTFSC	STATUS, C
	GOTO	PROXIMO10
	GOTO	IMPRIME09

PROXIMO10
	MOVLW	.41
	SUBWF	CONT	; TESTA SE SAÍDA = 1,0V
	BTFSC	STATUS, C
	GOTO	PROXIMO11
	GOTO	IMPRIME10

PROXIMO11
	MOVLW	.40
	SUBWF	CONT	; TESTA SE SAÍDA = 1,1V
	BTFSC	STATUS, C
	GOTO	PROXIMO12
	GOTO	IMPRIME11

PROXIMO12
	MOVLW	.39
	SUBWF	CONT	; TESTA SE SAÍDA = 1,2V
	BTFSC	STATUS, C
	GOTO	PROXIMO13
	GOTO	IMPRIME12

PROXIMO13
	MOVLW	.38
	SUBWF	CONT	; TESTA SE SAÍDA = 1,3V
	BTFSC	STATUS, C
	GOTO	PROXIMO14
	GOTO	IMPRIME13

PROXIMO14
	MOVLW	.37
	SUBWF	CONT	; TESTA SE SAÍDA = 1,4V
	BTFSC	STATUS, C
	GOTO	PROXIMO15
	GOTO	IMPRIME14

PROXIMO15
	MOVLW	.36
	SUBWF	CONT	; TESTA SE SAÍDA = 1,5V
	BTFSC	STATUS, C
	GOTO	PROXIMO16
	GOTO	IMPRIME15

PROXIMO16
	MOVLW	.35
	SUBWF	CONT	; TESTA SE SAÍDA = 1,6V
	BTFSC	STATUS, C
	GOTO	PROXIMO17
	GOTO	IMPRIME16

PROXIMO17
	MOVLW	.34
	SUBWF	CONT	; TESTA SE SAÍDA = 1,7V
	BTFSC	STATUS, C
	GOTO	PROXIMO18
	GOTO	IMPRIME17

PROXIMO18
	MOVLW	.33
	SUBWF	CONT	; TESTA SE SAÍDA = 1,8V
	BTFSC	STATUS, C
	GOTO	PROXIMO19
	GOTO	IMPRIME18

PROXIMO19
	MOVLW	.32
	SUBWF	CONT ; TESTA SE SAÍDA = 1,9V
	BTFSC	STATUS, C
	GOTO	PROXIMO20
	GOTO	IMPRIME19

PROXIMO20
	MOVLW	.31
	SUBWF	CONT	; TESTA SE SAÍDA = 2,0V
	BTFSC	STATUS, C
	GOTO	PROXIMO20
	GOTO	IMPRIME20

PROXIMO21
	MOVLW	.30
	SUBWF	CONT	; TESTA SE SAÍDA = 2,1V
	BTFSC	STATUS, C
	GOTO	PROXIMO22
	GOTO	IMPRIME21

PROXIMO22
	MOVLW	.29
	SUBWF	CONT	; TESTA SE SAÍDA = 2,2V
	BTFSC	STATUS, C
	GOTO	PROXIMO23
	GOTO	IMPRIME22

PROXIMO23
	MOVLW	.28
	SUBWF	CONT	; TESTA SE SAÍDA = 2,3V
	BTFSC	STATUS, C
	GOTO	PROXIMO24
	GOTO	IMPRIME23

PROXIMO24
	MOVLW	.27
	SUBWF	CONT	; TESTA SE SAÍDA = 2,4V
	BTFSC	STATUS, C
	GOTO	PROXIMO25
	GOTO	IMPRIME24

PROXIMO25
	MOVLW	.26
	SUBWF	CONT	; TESTA SE SAÍDA = 2,5V
	BTFSC	STATUS, C
	GOTO	PROXIMO26
	GOTO	IMPRIME25

PROXIMO26
	MOVLW	.25
	SUBWF	CONT	; TESTA SE SAÍDA = 2,6V
	BTFSC	STATUS, C
	GOTO	PROXIMO27
	GOTO	IMPRIME26

PROXIMO27
	MOVLW	.24
	SUBWF	CONT	; TESTA SE SAÍDA = 2,7V
	BTFSC	STATUS, C
	GOTO	PROXIMO28
	GOTO	IMPRIME27

PROXIMO28
	MOVLW	.23
	SUBWF	CONT	; TESTA SE SAÍDA = 2,8V
	BTFSC	STATUS, C
	GOTO	PROXIMO29
	GOTO	IMPRIME28

PROXIMO29
	MOVLW	.22
	SUBWF	CONT	; TESTA SE SAÍDA = 2,9V
	BTFSC	STATUS, C
	GOTO	PROXIMO30
	GOTO	IMPRIME29

PROXIMO30
	MOVLW	.21
	SUBWF	CONT	; TESTA SE SAÍDA = 3,0V
	BTFSC	STATUS, C
	GOTO	PROXIMO31
	GOTO	IMPRIME30

PROXIMO31
	MOVLW	.20
	SUBWF	CONT	; TESTA SE SAÍDA = 3,1V
	BTFSC	STATUS, C
	GOTO	PROXIMO32
	GOTO	IMPRIME31

PROXIMO32
	MOVLW	.19
	SUBWF	CONT	; TESTA SE SAÍDA = 3,2V 
	BTFSC	STATUS, C
	GOTO	PROXIMO33
	GOTO	IMPRIME32

PROXIMO33
	MOVLW	.18
	SUBWF	CONT	; TESTA SE SAÍDA = 3,3V
	BTFSC	STATUS, C
	GOTO	PROXIMO34
	GOTO	IMPRIME33

PROXIMO34
	MOVLW	.17
	SUBWF	CONT	; TESTA SE SAÍDA = 3,4V
	BTFSC	STATUS, C
	GOTO	PROXIMO35
	GOTO	IMPRIME34

PROXIMO35
	MOVLW	.16
	SUBWF	CONT	; TESTA SE SAÍDA = 3,5V
	BTFSC	STATUS, C
	GOTO	PROXIMO36
	GOTO	IMPRIME35

PROXIMO36
	MOVLW	.15
	SUBWF	CONT	; TESTA SE SAÍDA = 3,6V
	BTFSC	STATUS, C
	GOTO	PROXIMO37
	GOTO	IMPRIME36

PROXIMO37
	MOVLW	.14
	SUBWF	CONT	; TESTA SE SAÍDA = 3,7V
	BTFSC	STATUS, C
	GOTO	PROXIMO38
	GOTO	IMPRIME37
PROXIMO38
	MOVLW	.13
	SUBWF	CONT	; TESTA SE SAÍDA = 3,8V
	BTFSC	STATUS, C
	GOTO	PROXIMO39
	GOTO	IMPRIME38
PROXIMO39
	MOVLW	.12
	SUBWF	CONT	; TESTA SE SAÍDA = 3,9V
	BTFSC	STATUS, C
	GOTO	PROXIMO40
	GOTO	IMPRIME39
PROXIMO40
	MOVLW	.11
	SUBWF	CONT	; TESTA SE SAÍDA = 4,0V
	BTFSC	STATUS, C
	GOTO	PROXIMO41
	GOTO	IMPRIME40
PROXIMO41
	MOVLW	.10
	SUBWF	CONT	; TESTA SE SAÍDA = 4,1V
	BTFSC	STATUS, C
	GOTO	PROXIMO42
	GOTO	IMPRIME41
PROXIMO42
	MOVLW	.9
	SUBWF	CONT	; TESTA SE SAÍDA = 4,2V
	BTFSC	STATUS, C
	GOTO	PROXIMO43
	GOTO	IMPRIME42
PROXIMO43
	MOVLW	.8
	SUBWF	CONT	; TESTA SE SAÍDA = 4,3V
	BTFSC	STATUS, C
	GOTO	PROXIMO44
	GOTO	IMPRIME43
PROXIMO44
	MOVLW	.7
	SUBWF	CONT	; TESTA SE SAÍDA = 4,4V
	BTFSC	STATUS, C
	GOTO	PROXIMO45
	GOTO	IMPRIME44
PROXIMO45
	MOVLW	.6
	SUBWF	CONT	; TESTA SE SAÍDA = 4,5V
	BTFSC	STATUS, C
	GOTO	PROXIMO46
	GOTO	IMPRIME45
PROXIMO46
	MOVLW	.5
	SUBWF	CONT	; TESTA SE SAÍDA = 4,6V
	BTFSC	STATUS, C
	GOTO	PROXIMO47
	GOTO	IMPRIME46
PROXIMO47
	MOVLW	.4
	SUBWF	CONT	; TESTA SE SAÍDA = 4,7V
	BTFSC	STATUS, C
	GOTO	PROXIMO48
	GOTO	IMPRIME47
PROXIMO48
	MOVLW	.3
	SUBWF	CONT	; TESTA SE SAÍDA = 4,8V
	BTFSC	STATUS, C
	GOTO	PROXIMO49
	GOTO	IMPRIME48
PROXIMO49
	MOVLW	.2
	SUBWF	CONT	; TESTA SE SAÍDA = 4,9V
	BTFSC	STATUS, C
	GOTO	PROXIMO50
	GOTO	IMPRIME49
PROXIMO50
	MOVLW	.1
	SUBWF	CONT	; TESTA SE SAÍDA = ,V
	BTFSC	STATUS, C
	GOTO	IMPRIME50
	GOTO	IMPRIME49

IMPRIME00
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_0
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME01
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_1
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME02
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_2
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME03
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_3
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME04
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_4
	CALL	IMPRIME_V
	GOTO	MAIN
	
IMPRIME05
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_5
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME06
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_6
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME07
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_7
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME08
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_8
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME09
	CALL	IMPRIME_0
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_9
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME10
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_0
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME11
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_1
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME12
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_2
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME13
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_3
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME14
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_4
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME15
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_5
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME16
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_6
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME17
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA 
	CALL	IMPRIME_7
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME18
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_8
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME19
	CALL	IMPRIME_1
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_9
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME20
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_0
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME21
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_1
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME22
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_2
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME23
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_3
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME24
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_4
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME25
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_5
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME26
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_6
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME27
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_7
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME28
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_8
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME29
	CALL	IMPRIME_2
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_9
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME30
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_0
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME31
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_1
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME32
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_2
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME33
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_3
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME34
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_4
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME35
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_5
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME36
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_6
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME37
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_7
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME38
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_8
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME39
	CALL	IMPRIME_3
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_9
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME40
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_0
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME41
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_1
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME42
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_2
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME43
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_3
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME44
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_4
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME45
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_5
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME46
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_6
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME47
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_7
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME48
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_8
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME49
	CALL	IMPRIME_4
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_9
	CALL	IMPRIME_V
	GOTO	MAIN

IMPRIME50
	CALL	IMPRIME_5
	CALL	IMPRIME_VIRGULA
	CALL	IMPRIME_0
	CALL	IMPRIME_V
	GOTO	MAIN

	; FALTOU APENAS CRIAR AS FUNÇÕES: IMPRIME_0, IMPRIME_1, IMPRIME_2, IMPRIME_3, IMPRIME_4,
	; IMPRIME_5, IMPRIME_6, IMPRIME_7, IMPRIME_8, IMPRIME_9, IMPRIME_VIRGULA E IMPRIME_V
	; QUE FARIAM A MOVIMENTAÇÃO DO VALOR PRO DISPLAY DE ACORDO COM 
	; A TABELA ASCII
	; FALTEI A AULA DESSE ASSUNTO E TIVE DIFICULDADES NA HORA DE FAZER FUNCIONAR 
	; A CONVERSÃO 


	
	

FIM
	GOTO	MAIN
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END


